//
// Generated file, do not edit! Created by nedtool 5.6 from ingressTag.msg.
//

#ifndef __INET_INGRESSTAG_M_H
#define __INET_INGRESSTAG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif


namespace inet {

class ingressTag;
} // namespace inet

#include "inet/common/INETDefs_m.h" // import inet.common.INETDefs

#include "inet/common/TagBase_m.h" // import inet.common.TagBase


namespace inet {

/**
 * Class generated from <tt>ingressTag.msg:22</tt> by nedtool.
 * <pre>
 * class ingressTag extends TagBase
 * {
 *     int ingressPort = -1; // The ingress port of the router/switch
 * }
 * </pre>
 */
class ingressTag : public ::inet::TagBase
{
  protected:
    int ingressPort = -1;

  private:
    void copy(const ingressTag& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ingressTag&);

  public:
    ingressTag();
    ingressTag(const ingressTag& other);
    virtual ~ingressTag();
    ingressTag& operator=(const ingressTag& other);
    virtual ingressTag *dup() const override {return new ingressTag(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getIngressPort() const;
    virtual void setIngressPort(int ingressPort);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ingressTag& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ingressTag& obj) {obj.parsimUnpack(b);}

} // namespace inet

#endif // ifndef __INET_INGRESSTAG_M_H

